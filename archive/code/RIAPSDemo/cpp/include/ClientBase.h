//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//

#ifndef RIAPS_CORE_CLIENT_H
#define RIAPS_CORE_CLIENT_H

#include "componentmodel/r_componentbase.h"
#include "ReqAddr.capnp.h"
#include "RepAddr.capnp.h"

// Name of the ports from the model file
#define PORT_REQ_DSO "dso"

namespace transactiveenergy {
   namespace components {
      
      class ClientBase : public riaps::ComponentBase {
         
         public:
         ClientBase(_component_conf &config, riaps::Actor &actor);
         
         bool SendDso(capnp::MallocMessageBuilder&    messageBuilder,
         ReqAddr::Builder& message);
         
         bool RecvDso(RepAddr::Reader &message);
         
         virtual ~ClientBase();
         protected:
         virtual void DispatchMessage(capnp::FlatArrayMessageReader* capnpreader, riaps::ports::PortBase *port,std::shared_ptr<riaps::MessageParams> params=nullptr );
         virtual void DispatchInsideMessage(zmsg_t* zmsg, riaps::ports::PortBase* port);
      };
   }
}
#endif //RIAPS_CORE_CLIENT_H
